// <auto-generated />
using System;
using Codigo_examen.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Codigo_examen.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Codigo_examen.Models.DatosExtra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoMaterno")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CodigoPostal")
                        .HasPrecision(1000, 99999)
                        .HasColumnType("int");

                    b.Property<string>("Colonia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("DatosExtraDelUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Municipio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("NumeroExterior")
                        .HasPrecision(1, 999)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DatosExtraDelUsuario")
                        .IsUnique();

                    b.ToTable("DatosExtras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApellidoMaterno = "Example",
                            ApellidoPaterno = "Example",
                            Calle = "Example",
                            CodigoPostal = 1000,
                            Colonia = "Example",
                            DatosExtraDelUsuario = new Guid("e8332afa-665a-4692-a08d-623f06c7cfe3"),
                            Email = "Example@example1.com",
                            Estado = "Example",
                            Municipio = "Example",
                            NumeroExterior = 1
                        },
                        new
                        {
                            Id = 2,
                            ApellidoMaterno = "Example",
                            ApellidoPaterno = "Example",
                            Calle = "Example",
                            CodigoPostal = 1001,
                            Colonia = "Example",
                            DatosExtraDelUsuario = new Guid("206c93fb-1500-40a0-9396-c2df231240b7"),
                            Email = "Example@example2.com",
                            Estado = "Example",
                            Municipio = "Example",
                            NumeroExterior = 2
                        },
                        new
                        {
                            Id = 3,
                            ApellidoMaterno = "Example",
                            ApellidoPaterno = "Example",
                            Calle = "Example",
                            CodigoPostal = 1002,
                            Colonia = "Example",
                            DatosExtraDelUsuario = new Guid("e6e0f6fc-0000-4e24-adec-8de808a9d75e"),
                            Email = "Example@example3.com",
                            Estado = "Example",
                            Municipio = "Example",
                            NumeroExterior = 3
                        });
                });

            modelBuilder.Entity("Codigo_examen.Models.Usuarios", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e8332afa-665a-4692-a08d-623f06c7cfe3"),
                            Contrasena = "12345678",
                            IsDeleted = false,
                            NombreUsuario = "Daniel"
                        },
                        new
                        {
                            Id = new Guid("206c93fb-1500-40a0-9396-c2df231240b7"),
                            Contrasena = "01234567",
                            IsDeleted = false,
                            NombreUsuario = "Juanito"
                        },
                        new
                        {
                            Id = new Guid("e6e0f6fc-0000-4e24-adec-8de808a9d75e"),
                            Contrasena = "23456789",
                            IsDeleted = false,
                            NombreUsuario = "Pepito"
                        });
                });

            modelBuilder.Entity("Codigo_examen.Models.DatosExtra", b =>
                {
                    b.HasOne("Codigo_examen.Models.Usuarios", "usuario")
                        .WithOne("DatosExtra")
                        .HasForeignKey("Codigo_examen.Models.DatosExtra", "DatosExtraDelUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Datos_extra_usuario");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Codigo_examen.Models.Usuarios", b =>
                {
                    b.Navigation("DatosExtra")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
